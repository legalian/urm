



{U                                                                              #0
|AFF:U
|ZERO:AFF
|ONE:AFF

|[A:U|A|A]EQ:U
|[A:U|a:A]IDENTITY:EQ(A,a,a)                                              #5
|[A:U|B:U|A|EQ(U,A,B)]EQUIVALENCE:B
|[A:U|B:U|[A]B|[B]A]HOMOMORPH:EQ(U,A,B)
|[A:U|a:A|b:A|EQ(A,b,a)]REFLEXIVITY:EQ(A,a,b)
|[A:U|B:U|[A]f:B|a:A|b:A|EQ(A,a,b)]PRESERVATION:EQ(B,f(a),f(b))

|[A:U|[A]B:U]{
    AND:U                                                                    #10
    |[AND(A,B({0/3}))]{
        ANDACC:A
        |ANDACCB:B(a)
    }
    |[a:A|b:B(a)]{
        UNION:AND(A,B({0/3}))
        |MEMBER:EQ(A,ANDACC(A,B,UNION(A,B({0/3}),a,b)),a)
        |MEMBERB:EQ(B,ANDACCB(A,B,UNION(A,B({0/3}),a,b)),b)                        #15
    }
}
|[A:U]{
    NOT:U
    |DOUBLENEG:EQ(U,NOT(NOT(A)),A)
}

|[AFF|AFF]ADD:AFF
|[AFF]AINVERSE:AFF
|[a:AFF|b:AFF]ADD_COMMUTATIVE:EQ(AFF,ADD(a,b),ADD(b,a))                                    #20
|[a:AFF|b:AFF|c:AFF]ADD_ASSOCIATIVE:EQ(AFF,ADD(ADD(a,b),c),ADD(a,ADD(b,c)))
|[a:AFF]ADD_IDENTITY:EQ(AFF,ADD(a,ZERO),a)
|[a:AFF]ADD_IDENTITY_ANNIHALATE:EQ(AFF,ADD(a,AINVERSE(a)),ZERO)
|[AFF|AFF]MULTIPLY:AFF
|[a:AFF|NOT(EQ(AFF,a,ZERO))]MINVERSE:AFF                                                                #25
|[a:AFF|b:AFF]MULTIPLY_COMMUTATIVE:EQ(AFF,MULTIPLY(a,b),MULTIPLY(b,a))
|[a:AFF|b:AFF|c:AFF]MULTIPLY_ASSOCIATIVE:EQ(AFF,MULTIPLY(MULTIPLY(a,b),c),MULTIPLY(a,MULTIPLY(b,c)))
|[a:AFF]MULTIPLY_IDENTITY:EQ(AFF,MULTIPLY(a,ONE),a)
|[a:AFF|g:NOT(EQ(AFF,a,ZERO))]MULTIPLY_IDENTITY_ANNIHALATE:EQ(AFF,MULTIPLY(a,MINVERSE(a,g)),ONE)
|[a:AFF|b:AFF|c:AFF]DISTRIBUTIVE:EQ(AFF,MULTIPLY(a,ADD(b,c)),ADD(MULTIPLY(a,b),MULTIPLY(a,c)))            #30

|[a:AFF|b:AFF]{
    GT:U
    |[NOT(GT(b,a))    |NOT(GT(a,b))]TRICHOTOMY_E:EQ(AFF,b,a)
    |[NOT(EQ(AFF,b,a))|NOT(GT(b,a))]TRICHOTOMY_G:GT(a,b)
    |[GT(b,a)]    TRICHOTOMY_NE:NOT(EQ(AFF,b,a))
    |[EQ(AFF,b,a)]TRICHOTOMY_NG:NOT(GT(b,a))
    |[c:AFF|d:AFF|GT(a,b)|NOT(GT(d,c))]ADDITIVE:GT(ADD(a,c),ADD(b,d))
    |[c:AFF|GT(a,b)|GT(c,ZERO)]       MULTIPLICATIVE:GT(MULTIPLY(a,c),MULTIPLY(b,c))
    |[c:AFF|GT(a,b)|GT(ZERO,c)]FLIPPEDMULTIPLICATIVE:GT(MULTIPLY(b,c),MULTIPLY(a,c))
}

|[T:U|K:U|[K]a:T|[NOT(K)]b:T]{
    DEC:T
    |[k:K]     DEC_POSITIVE:EQ(T,DEC(T,K,a({0/3}),b({0/3})),a(k))
    |[k:NOT(K)]DEC_NEGATIVE:EQ(T,DEC(T,K,a({0/3}),b({0/3})),b(k))
}

|[A:U|[A]B|[A]L:AFF|a:A|[b:A|[c:A|NOT(GT(ADD(L(c),ONE),L(b)))|GT(L(b),ZERO)]B(c)]B(b)]INDUCTION:B(a)





}



